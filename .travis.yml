---
sudo: false
# dist: trusty
addons:
  apt:
    sources:
    # - sourceline: 'ppa:ubuntu-toolchain-r/test'
    # - sourceline: ppa:gophers/archive
    # - sourceline: ppa:longsleep/golang-backports ######################### '
    packages:
    - python-pygments
    # - highlight
    # - source-highlight
    - golang
    - snapd
language: php

cache:
  directories:
    - $HOME/.composer/cache/files

matrix:
  fast_finish: true
  include:
    - php: 7.0 # symfony/skeleton requires ^7.0.8
      env:
        # - PHPUNIT=phpunit
        # - TEST_LINT=`true`
        # - PHP_CS_FIXER=`true`
        - SENSIO_SECURITY=`true`
    - php: 7.1
      env:
        - SYMFONY_VERSION="^3.4@dev"
        # - PHPUNIT=phpunit
        # - TEST_LINT=`true`
        # - PHP_CS_FIXER=`true`
        - SENSIO_SECURITY=`true`
    - php: 7.2
      env:
        - SYMFONY_VERSION="^4.0@dev"
        # - PHPUNIT=phpunit
        # - TEST_LINT=`true`
        - SENSIO_SECURITY=`true`
    - php: nightly
      env:
        - SYMFONY_VERSION="^4.0@dev"
        # - PHPUNIT=phpunit
        # - TEST_LINT=`true`
        - SENSIO_SECURITY=`true`
  allow_failures:
    - php: 7.2
    - php: nightly

before_install:
  - echo $PHPUNIT
  - pwd
  - echo $HOME
  - echo $TRAVIS_PHP_VERSION
  - which composer
  - ls /tmp
  - php --ini
  - xdebug=/home/travis/.phpenv/versions/$TRAVIS_PHP_VERSION/etc/conf.d/xdebug.ini
  - if [[ -f $xdebug ]]; then cat $xdebug; cp $xdebug /tmp; phpenv config-rm xdebug.ini; fi
  - xdebug_php=
  - if [[ -f /tmp/xdebug.ini ]]; then xdebug_php='-c /tmp/xdebug.ini'; fi
  - install --directory .travis/bin
  - if [[ -v PHP_CS_FIXER ]]; then wget http://cs.sensiolabs.org/download/php-cs-fixer-v2.phar --output-document=.travis/bin/php-cs-fixer; fi
  - if [[ -v PHPUNIT ]]; then wget https://phar.phpunit.de/${PHPUNIT}.phar --output-document=.travis/bin/$PHPUNIT; fi
  - if [[ -v SENSIO_SECURITY ]]; then wget http://get.sensiolabs.org/security-checker.phar --output-document=.travis/bin/security-checker; fi
  - apt-cache policy python-pygments highlight source-highlight
  - source-highlight --lang-list || true
  - which pip
  - pip install pygments ################### TODO use this!
  # - pushd ~
  # - wget https://storage.googleapis.com/golang/go1.9.1.linux-amd64.tar.gz
  # - tar xzf go1.9.1.linux-amd64.tar.gz
  # - sudo apt-get --yes install snapd
  # - sudo snap install hugo
  - snap install --classic go
  - printenv GOPATH
  - go get -u github.com/jingweno/ccat
  - ls -a
  - ls -a ~
  - ls -a $GOPATH
  - ls -a $GOPATH/bin
  - ls -l $GOPATH/bin/ccat
  # - $GOPATH/bin/ccat .travis.yml

install:
  # - composer validate
  # - if [[ -v SYMFONY_VERSION ]]; then composer require symfony/symfony:${SYMFONY_VERSION} --no-scripts --no-progress --no-suggest; fi
  # - composer install --no-scripts --no-progress --no-suggest
  # - if [[ -f config/parameters.yml.travis ]]; then cp config/parameters.yml.travis config/parameters.yml; fi
  # - composer up --no-progress --no-suggest --optimize-autoloader --apcu-autoloader
  - composer create-project symfony/skeleton my-project
  - cd my-project
  - composer require cli # symfony/console
  - composer require symfony/web-server-bundle # for a better web server
  - composer show

before_script:

script:
  - ls --color
  - ls -R --color bin config public src
  # - ls -R --color var
  - $GOPATH/bin/ccat config/packages/framework.yaml
  - $GOPATH/bin/ccat config/packages/routing.yaml
  - $GOPATH/bin/ccat config/packages/dev/routing.yaml
  - $GOPATH/bin/ccat config/packages/test/framework.yaml
  # - $GOPATH/bin/ccat src/Kernel.php
  - pygmentize -g src/Kernel.php
  # - pygmentize -g -O style=colorful,linenos=1 src/Kernel.php
  # - highlight -O ansi src/Kernel.php
  # - source-highlight --out-format=esc -o STDOUT -i src/Kernel.php
  - make serve
  - w3m http://localhost:8000/ | cat
  # - wget --output-document=- http://127.0.0.1:8000
  - for f in $(find . -path './vendor' -prune -o -path './tests' -prune -o -name \*.php -print) ; do php -l $f ; done # Do this first!
  - if [[ -v TEST_LINT ]]; then for f in $(find ./tests -name \*.php -print); do php -l $f; done; fi
  - if [[ -v PHP_CS_FIXER ]]; then php ../.travis/bin/php-cs-fixer --version; fi
  # --stop-on-violation
  - if [[ -v PHP_CS_FIXER ]]; then php ../.travis/bin/php-cs-fixer fix --diff --dry-run -vvv --using-cache=no; fi
  - if [[ -v PHPUNIT ]]; then php --ini -c /tmp/xdebug.ini; php $xdebug_php ../.travis/bin/$PHPUNIT; fi

  - if [[ -v SENSIO_SECURITY ]]; then php ../.travis/bin/security-checker security:check --end-point=http://security.sensiolabs.org/check_lock; fi
    #^ This checks that the application doesn't use dependencies with known security vulnerabilities
  - if [[ -v VENDOR_LINT ]]; then for f in $(find ./vendor -name \*.php); do php -l $f > /dev/null; done; fi
    #^ Should be the last line of install but sometimes long to execute and little can be done for errors found.

after_success:
    - bash <(curl -s https://codecov.io/bash) -s /tmp

# inspirated from:
  # symfony/symfony-demo
  # https://github.com/doctrine/dbal/blob/v2.5.13/.travis.yml
